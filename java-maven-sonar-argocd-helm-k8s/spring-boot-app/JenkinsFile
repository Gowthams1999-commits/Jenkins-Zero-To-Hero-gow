pipeline {
    agent any
    stages {
        stage('Git Checkout') {
            steps {
                // Corrected the spacing and stage name to be more consistent
                git credentialsId: 'jenkins_thirsha', url: 'https://github.com/Gowthams1999-commits/Jenkins-Zero-To-Hero-gow.git'
            }
        }
        
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://www.sonartest.com"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Make sure to properly access the environment variables for SonarQube login
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "kranbupriyan/ultimate-cicd:v${BUILD_NUMBER}"
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker_anbu', passwordVariable: 'docker_password', usernameVariable: 'docker_username')]) {
                        // Use correct multi-line syntax for the shell script
                        sh '''echo ${docker_password} | docker login -u ${docker_username} --password-stdin
                        docker build -t ${DOCKER_IMAGE} .
                        docker push ${DOCKER_IMAGE}'''
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero-gow"
                GIT_USER_NAME = "Gowthams1999-commits"
                DEPLOYMENT_FILE = "${WORKSPACE}/spring-boot-app-manifests/deployment.yaml" // Fixed path to the correct file
            }
            steps {
                withCredentials([string(credentialsId: 'git_token_test_id', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "githubgowtham1999@gmail.com"
                    git config user.name "Gowthams1999-commits"
                    sed -i "s|image: .*|image: ${DOCKER_IMAGE}|g" ${DEPLOYMENT_FILE}
                    git add ${DEPLOYMENT_FILE}  // Fixing path to deployment.yaml
                    git commit -m "Update deployment image to version ${DOCKER_IMAGE}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
